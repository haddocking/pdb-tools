name: build_and_test

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
      shell: bash

    - name: Linter
      run: |
        python -m pip install flake8
        flake8 .

  build_and_test_linux:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [2.7, 3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel bump2version twine
      shell: bash

    - name: Linter
      run: |
        python -m pip install flake8
        flake8 .

    - name: Build
      run: |
        python --version
        python setup.py sdist bdist_wheel
        twine check dist/*.whl
        twine check dist/*.tar.gz
        bump2version --dry-run --verbose --allow-dirty patch
        bump2version --dry-run --verbose --allow-dirty minor
        bump2version --dry-run --verbose --allow-dirty major

    - name: Test
      run: |
        python -m pip install .
        script -q -e -c "python setup.py test"

  test_macos:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-latest]
        python-version: [2.7, 3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        brew install expect
      shell: bash

    - name: Test Linux/MacOS
      run: |
        python -m pip install .
        unbuffer python setup.py test

   # test_windows:
   #   runs-on: ${{ matrix.platform }}
   #   strategy:
   #     matrix:
   #       platform: [windows-latest]
   #       python-version: [2.7, 3.6, 3.7, 3.8, 3.9]

   #   steps:
   #   - uses: actions/checkout@v2

   #   - name: Set up Python ${{ matrix.python-version }}
   #     uses: actions/setup-python@v2
   #     with:
   #       python-version: ${{ matrix.python-version }}

   #   - name: Install dependencies
   #     run: |
   #       python -m pip install --upgrade pip setuptools wheel

   #   - name: Test Windows
   #     run: |
   #       python -m pip install .
   #       Invoke-Expression 'python setup.py test'

  coverage:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [2.7, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install coverage

    - name: Get Coverage
      run: |
        python -m pip install .
        script -q -e -c "coverage run setup.py test"

    # from https://about.codecov.io/blog/
    # python-code-coverage-using-github-actions-and-codecov/
    - name: Upload Coverage to Codecov
      continue-on-error: true
      id: codecov_upload
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        verbose: true

    # Retry in case connection is flaky
    - name: Upload Coverage to Codecov (Retry)
      if: steps.codecov_upload.outcome == 'failure'
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        verbose: true
