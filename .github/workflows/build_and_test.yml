name: build_and_test

on:
  push:
  pull_request:

jobs:
  # Only lint in one platform to save compute time
  lint:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.10]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
      shell: bash

    - name: Linter
      run: |
        python -m pip install flake8
        flake8 .

  # Segregate all OSes to handle calling the scripts differently.
  # This is necessary because of the tests to piping, which require
  # a TTY, which is differently set up in each OS runner.
  build_and_test_linux:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [2.7, 3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel bump2version twine
        python -m pip install --upgrade coverage
      shell: bash

    - name: Build
      run: |
        python --version
        python setup.py sdist bdist_wheel
        twine check dist/*.whl
        twine check dist/*.tar.gz
        bump2version --dry-run --verbose --allow-dirty patch
        bump2version --dry-run --verbose --allow-dirty minor
        bump2version --dry-run --verbose --allow-dirty major

    - name: Test
      run: |
        python -m pip install .
        script -q -e -c "coverage run setup.py test"

    # Store coverage data for later
    # https://hynek.me/articles/ditch-codecov-python/
    - name: Upload coverage data
      uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage.*
        if-no-files-found: ignore

  build_and_test_macos:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-latest]
        python-version: [2.7, 3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel bump2version twine
        python -m pip install --upgrade coverage
        brew install expect
      shell: bash

    - name: Build
      run: |
        python --version
        python setup.py sdist bdist_wheel
        twine check dist/*.whl
        twine check dist/*.tar.gz
        bump2version --dry-run --verbose --allow-dirty patch
        bump2version --dry-run --verbose --allow-dirty minor
        bump2version --dry-run --verbose --allow-dirty major

    - name: Test Linux/MacOS
      run: |
        python -m pip install .
        unbuffer coverage run setup.py test

    # Store coverage data for later
    # https://hynek.me/articles/ditch-codecov-python/
    - name: Upload coverage data
      uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage.*
        if-no-files-found: ignore

   build_and_test_windows:
     runs-on: ${{ matrix.platform }}
     strategy:
       matrix:
         platform: [windows-latest]
         python-version: [2.7, 3.6, 3.7, 3.8, 3.9, 3.10]

     steps:
     - uses: actions/checkout@v2

     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel bump2version twine
        python -m pip install --upgrade coverage

    - name: Build
      run: |
        python --version
        python setup.py sdist bdist_wheel
        twine check dist/*.whl
        twine check dist/*.tar.gz
        bump2version --dry-run --verbose --allow-dirty patch
        bump2version --dry-run --verbose --allow-dirty minor
        bump2version --dry-run --verbose --allow-dirty major

     - name: Test Windows
       run: |
         python -m pip install .
         Invoke-Expression -Command 'coverage run setup.py test'

  # https://hynek.me/articles/ditch-codecov-python/
  coverage:
     name: Combine & Check coverage.
     runs-on: ubuntu-latest
     needs: [build_and_test_linux, build_and_test_macos]
     steps:
       - uses: actions/checkout@v2
       - uses: actions/setup-python@v2
         with:
           # Use latest, so it understands all syntax.
           python-version: "3.10"

       - run: |
           python -m pip install --upgrade pip setuptools wheel
           python -m pip install --upgrade coverage

       - name: Download coverage data.
         uses: actions/download-artifact@v2
         with:
           name: coverage-data

       # We should update the threshold as we write more tests.
       # It should be the minimum we are comfortable with.
       - name: Combine coverage & fail if it's < threshold %.
         run: |
           python -m coverage combine
           python -m coverage html --skip-covered --skip-empty
           python -m coverage report --fail-under=80

       - name: Upload HTML report if check failed.
         uses: actions/upload-artifact@v2
         with:
           name: html-report
           path: htmlcov
         if: ${{ failure() }}

